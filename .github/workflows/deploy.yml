name: Deploy FastAPI App to EC2

on:
  push:
    branches: [ "pankti-master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Verify Terraform Install
        run: terraform --version

      - name: Terraform Init
        run: cd iac && terraform init

      - name: Terraform Apply
        run: cd iac && terraform apply -auto-approve

      - name: Capture EC2 IP from Terraform (safe)
        id: capture_ip
        run: |
          IP=$(cd iac && terraform output -json | jq -r '.instance_ip.value')
          IP_CLEAN=$(echo "$IP" | tr -d '[:space:]')
          if [[ ! "$IP_CLEAN" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
            echo "IP from Terraform wasn't a valid IPv4 address: '$IP_CLEAN'" >&2
            exit 1
          fi
          echo "EC2_IP=$IP_CLEAN" >> "$GITHUB_ENV"
          echo "ip=$IP_CLEAN" >> "$GITHUB_OUTPUT"
          echo "Captured EC2 IP: $IP_CLEAN"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/pankti-capstone.pem
          chmod 400 ~/.ssh/pankti-capstone.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/pankti-capstone.pem ubuntu@${{ env.EC2_IP }} "echo SSH connection successful"

      - name: Deploy App to EC2
        run: |
          echo "Copying backend files to EC2..."
          scp -o StrictHostKeyChecking=no -i ~/.ssh/pankti-capstone.pem -r Project/backend/src/* ubuntu@${{ env.EC2_IP }}:/home/ubuntu/

          echo "Installing dependencies and launching app..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/pankti-capstone.pem ubuntu@${{ env.EC2_IP }} <<'EOF'
            set -e
            sudo apt update
            sudo apt install -y python3-pip
            sudo pip3 install -r /home/ubuntu/requirements.txt
            cd /home/ubuntu/
            nohup uvicorn backend.src.main:app --host 0.0.0.0 --port 80 &
          EOF

      - name: Done
        run: echo "FastAPI app deployed successfully to ${{ env.EC2_IP }}"
